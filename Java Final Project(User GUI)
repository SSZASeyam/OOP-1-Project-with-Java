//BuyTicketFrame.java
package userGUI;

import files.*;
import entity.*;
import entitylist.*;
import javax.swing.*;
import java.awt.*;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.io.*;

public class BuyTicketFrame extends JFrame implements ActionListener
{
	private JPanel panel,panel1,panel2;
	private JLabel label1,label2,label3,
	label4,label5,label6,label7,
	label8,label9,label10,label11,
	label12,label13,label14;
	private JButton button1,button11,button12,button13;
	private JButton button2,
	button3,button4,button5,
	button6,button7,button8,
	button9,button10;
	Font font1=new Font("cambria",Font.BOLD+Font.ITALIC,35);
	Font font2=new Font("cambria",Font.BOLD,25);
	Font font3=new Font("cambria",Font.BOLD,15);
	private LogInFrame login;
	private HomePageFrame hp;
	private HistoryList historyList;
	public static int count=0;
	private static String trainName="Metro Rail";
	private boolean flag=false;
	public static double ticketPrice;
	private String fromStation="";
	private String toStation="";
	private String currentDate="";
	
	public BuyTicketFrame(HomePageFrame hp,LogInFrame login,HistoryList historyList)
	{
		super("Metro Rail");
		this.login=login;
		this.hp=hp;
		this.historyList=historyList;
		initializeForm();
		
		this.setVisible(true);
	}
	
	public void initializeForm()
	{
		this.setSize(900,600);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setLocationRelativeTo(null);
		this.setLayout(null);
		
		panel=new JPanel();
		panel.setBounds(0,0,900,600);
		panel.setLayout(null);
		panel.setOpaque(false);
		panel.setBackground(new Color(255,255,255));
		
		button1=new JButton();
		button1.setBounds(10,60,60,40);
		button1.addActionListener(this);
		button1.setToolTipText("Back to Homepage");
		
		JLabel label15=new JLabel("<");
		label15.setBounds(0,0,60,40);
		label15.setFont(new Font("Meiryo",Font.BOLD,35));
		button1.add(label15);
		
		ImageIcon img=new ImageIcon("./userGUI/Resources/LOGO2.png");
		JLabel logo=new JLabel("",img,JLabel.CENTER);
		logo.setBounds(90,50,60,60);
		
		label1=new JLabel("Metro Rail");
		label1.setBounds(150,45,250,60);
		label1.setFont(font1);
		
		button11=new JButton("Sign out");
		button11.setBounds(750,65,90,30);
		button11.setBackground(new Color(96,188,209));
		button11.setFont(font3);
		button11.addActionListener(this);
		
		label2=new JLabel("Buy Ticket");
		label2.setBounds(20,130,150,50);
		label2.setFont(font2);
		
		label3=new JLabel("Select Your Starting And Ending Station");
		label3.setBounds(20,190,400,30);
		label3.setFont(font3);
		
		label4=new JLabel("Uttara");
		label4.setBounds(30,250,60,30);
		label4.setFont(font3);
		
		button2=new JButton();
		button2.setBounds(40,300,30,30);
		button2.addActionListener(this);
		
		label5=new JLabel("Mirpur 12");
		label5.setBounds(120,250,80,30);
		label5.setFont(font3);
		
		button3=new JButton();
		button3.setBounds(130,300,30,30);
		button3.addActionListener(this);
		
		label6=new JLabel("Mirpur 10");
		label6.setBounds(225,250,80,30);
		label6.setFont(font3);
		
		button4=new JButton();
		button4.setBounds(235,300,30,30);
		button4.addActionListener(this);
		
		label7=new JLabel("Shewrapara");
		label7.setBounds(330,250,90,30);
		label7.setFont(font3);
		
		button5=new JButton();
		button5.setBounds(345,300,30,30);
		button5.addActionListener(this);
		
		label8=new JLabel("Agargaon");
		label8.setBounds(460,250,90,30);
		label8.setFont(font3);
		
		button6=new JButton();
		button6.setBounds(470,300,30,30);
		button6.addActionListener(this);
		
		label9=new JLabel("Bijay Sarani");
		label9.setBounds(570,250,90,30);
		label9.setFont(font3);
		
		button7=new JButton();
		button7.setBounds(580,300,30,30);
		button7.addActionListener(this);
		
		label10=new JLabel("Shahbag");
		label10.setBounds(690,250,90,30);
		label10.setFont(font3);
		
		button8=new JButton();
		button8.setBounds(700,300,30,30);
		button8.addActionListener(this);
		
		label11=new JLabel("DU");
		label11.setBounds(805,330,50,30);
		label11.setFont(font3);
		
		button9=new JButton();
		button9.setBounds(800,300,30,30);
		button9.addActionListener(this);
		
		label12=new JLabel("Motijheel");
		label12.setBounds(780,170,90,30);
		label12.setFont(font3);
		
		button10=new JButton();
		button10.setBounds(800,200,30,30);
		button10.addActionListener(this);
		
		button12=new JButton("Reset");
		button12.setBounds(650,450,80,30);
		button12.setBackground(new Color(96,188,209));
		button12.setFont(font3);
		button12.addActionListener(this);
		
		button13=new JButton("Buy");
		button13.setBounds(750,450,80,30);
		button13.setBackground(new Color(96,188,209));
	    button13.setFont(font3);
		button13.addActionListener(this);
	
		
		panel1=new JPanel();
		panel1.setBounds(70,300,740,30);
		panel1.setBackground(new Color(96,188,209));
		
		panel2=new JPanel();
		panel2.setBounds(800,230,30,70);
		panel2.setBackground(new Color(96,188,209));
		
		label14=new JLabel();
		label14.setBounds(40,420,250,60);
		label14.setFont(new Font("cambria",Font.BOLD,20));
		
		panel.add(label1);
		panel.add(label2);
		panel.add(label3);
		panel.add(label4);
		panel.add(label5);
		panel.add(label6);
		panel.add(label7);
		panel.add(label8);
		panel.add(label9);
		panel.add(label10);
		panel.add(label11);
		panel.add(label12);
		panel.add(label14);
		panel.add(button1);
		panel.add(button2);
		panel.add(button3);
		panel.add(button4);
		panel.add(button5);
		panel.add(button6);
		panel.add(button7);
		panel.add(button8);
		panel.add(button9);
		panel.add(button10);
		panel.add(button11);
		panel.add(button12);
		panel.add(button13);
		panel.add(logo);
		panel.add(panel1);
		panel.add(panel2);
		this.add(panel);
	}
	
	public void actionPerformed(ActionEvent e)
	{
		if(e.getSource()==button1)
		{
			//FileIO.saveFromTicketHistoryList("files/ticketHistory.txt",ticketHistory,false);
			//FileIO.readFromFile("files/ticketHistory.txt",ticketHistory);
			this.dispose();
		
            HomePageFrame hpf=new HomePageFrame(login,historyList);
			
		}
		if(e.getSource()==button2)
		{
			count++;
			if(count%2!=0)
			{
				fromStation="Uttara";
			}
			if(count%2==0)
			{
				toStation="Uttara";
				
				if(fromStation.equals("Mirpur 12"))
				{
					ticketPrice=30;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 10"))
				{
					ticketPrice=40;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shewrapara"))
				{
					ticketPrice=50;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Agargaon"))
				{
					ticketPrice=60;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Bijay Sarani"))
				{
					ticketPrice=60;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shahbag"))
				{
					ticketPrice=80;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("DU"))
				{
					ticketPrice=90;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Motijheel"))
				{
					ticketPrice=100;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
		    }
			
		}
		if(e.getSource()==button3)
		{
			count++;
			if(count%2!=0)
			{
				fromStation="Mirpur 12";
			}
			if(count%2==0)
			{
				toStation="Mirpur 12";
				
				if(fromStation.equals("Uttara"))
				{
					ticketPrice=30;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 10"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shewrapara"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Agargaon"))
				{
					ticketPrice=30;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Bijay Sarani"))
				{
					ticketPrice=40;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shahbag"))
				{
					ticketPrice=50;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("DU"))
				{
					ticketPrice=60;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Motijheel"))
				{
					ticketPrice=70;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				
				
			}
			
		}
		if(e.getSource()==button4)
		{
			count++;
			if(count%2!=0)
			{
				fromStation="Mirpur 10";
				flag=false;
			}
			if(count%2==0)
			{
				toStation="Mirpur 10";
				
				if(fromStation.equals("Uttara"))
				{
					ticketPrice=40;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 12"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shewrapara"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Agargaon"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Bijay Sarani"))
				{
					ticketPrice=30;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shahbag"))
				{
					ticketPrice=50;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("DU"))
				{
					ticketPrice=50;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Motijheel"))
				{
					ticketPrice=60;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
			}
			
		}
		if(e.getSource()==button5)
		{
			count++;
			if(count%2!=0)
			{
				fromStation="Shewrapara";
				flag=false;
			}
			if(count%2==0)
			{
				toStation="Shewrapara";
				
				if(fromStation.equals("Uttara"))
				{
					ticketPrice=50;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 12"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 10"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Agargaon"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Bijay Sarani"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shahbag"))
				{
					ticketPrice=40;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("DU"))
				{
					ticketPrice=40;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Motijheel"))
				{
					ticketPrice=50;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
			}
			
		}
		if(e.getSource()==button6)
		{
			count++;
			if(count%2!=0)
			{
				fromStation="Agargaon";
			}
			if(count%2==0)
			{
				toStation="Agargaon";
				
				if(fromStation.equals("Uttara"))
				{
					ticketPrice=60;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 12"))
				{
					ticketPrice=30;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 10"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shewrapara"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Bijay Sarani"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shahbag"))
				{
					ticketPrice=30;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("DU"))
				{
					ticketPrice=30;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Motijheel"))
				{
					ticketPrice=50;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				
			}
			
		}
		if(e.getSource()==button7)
		{
			count++;
			if(count%2!=0)
			{
				fromStation="Bijay Sarani";
			}
			if(count%2==0)
			{
				toStation="Bijay Sarani";
				
				if(fromStation.equals("Uttara"))
				{
					ticketPrice=60;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 12"))
				{
					ticketPrice=40;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 10"))
				{
					ticketPrice=30;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shewrapara"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Agargaon"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shahbag"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("DU"))
				{
					ticketPrice=30;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Motijheel"))
				{
					ticketPrice=40;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
			}
			
		}
		if(e.getSource()==button8)
		{
			count++;
			if(count%2!=0)
			{
				fromStation="Shahbag";
			}
			if(count%2==0)
			{
				toStation="Shahbag";
				
				if(fromStation.equals("Uttara"))
				{
					ticketPrice=80;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 12"))
				{
					ticketPrice=50;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 10"))
				{
					ticketPrice=50;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shewrapara"))
				{
					ticketPrice=40;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Agargaon"))
				{
					ticketPrice=30;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Bijay Sarani"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("DU"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Motijheel"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
			}
			
		}
		if(e.getSource()==button9)
		{
			count++;
			if(count%2!=0)
			{
				fromStation="DU";
			}
			if(count%2==0)
			{
				toStation="DU";
				
				if(fromStation.equals("Uttara"))
				{
					ticketPrice=90;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 12"))
				{
					ticketPrice=60;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 10"))
				{
					ticketPrice=50;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shewrapara"))
				{
					ticketPrice=40;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Agargaon"))
				{
					ticketPrice=30;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Bijay Sarani"))
				{
					ticketPrice=30;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shahbag"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Motijheel"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
			}
			
		}
		if(e.getSource()==button10)
		{
			count++;
			if(count%2!=0)
			{
				fromStation="Motijheel";
			}
			if(count%2==0)
			{
				toStation="Motijheel";
				
				if(fromStation.equals("Uttara"))
				{
					ticketPrice=100;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 12"))
				{
					ticketPrice=70;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Mirpur 10"))
				{
					ticketPrice=60;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shewrapara"))
				{
					ticketPrice=50;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Agargaon"))
				{
					ticketPrice=50;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Bijay Sarani"))
				{
					ticketPrice=40;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("Shahbag"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
				else if(fromStation.equals("DU"))
				{
					ticketPrice=20;
					label14.setText("Ticket Price : "+ticketPrice+" TK ");
				}
			}
			
		}
		if(e.getSource()==button12)
		{

			fromStation="";
			toStation="";
			
		}
		if(e.getSource()==button13)
		{
			if(!fromStation.equals("") && !toStation.equals("") && !fromStation.equals(toStation))
			{
				if(Double.parseDouble(login.balance)>=ticketPrice)
				{
				int option=JOptionPane.showConfirmDialog(this,"Are you Sure to Buy a ticket from "+fromStation+" to "+toStation+"?");
				if(option==JOptionPane.YES_OPTION)
			{
				Date date = new Date();
                
				DateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
				currentDate=dateformat.format(date);
				
			    TicketHistory th=new TicketHistory(trainName,fromStation,toStation,currentDate);
			    historyList.insertHistory(th);
			    FileIO.writeInFile(th.toString(),"files/ticketHistory.txt",true);
			
			try
			{
				String email="";
				String name="";
				String phone="";
				String pass="";
				String nid="";
				String balanceprice="";
				
				File oldfile=new File("files/TravelerList.txt");
				File newfile=new File("files/temp.txt");
				newfile.createNewFile();
				FileWriter fw=new FileWriter("files/temp.txt",true);
				
				
				FileReader fr=new FileReader(oldfile);
				BufferedReader bfr=new BufferedReader(fr);
				String singleLine;
				
				while((singleLine=bfr.readLine())!=null)
				{
					String sp[]=singleLine.split("/");
					if(sp[2].equals(login.emailId))
					{
						name=sp[0];
						nid=sp[1];
						email=sp[2];
						phone=sp[3];
						pass=sp[4];
						balanceprice=sp[5];
					}
					if(!sp[2].equals(login.emailId))
					{
						fw.write(singleLine+"\n");
					}
						
				}
				fr.close();
				fw.flush();
				fw.close();
				//pw.flush();
				//pw.close();
				oldfile.delete();
				File dump=new File("files/TravelerList.txt");
				newfile.renameTo(dump);
				double countTaka=Double.parseDouble(login.balance)-ticketPrice;
				String s=name+"/"+nid+"/"+email+"/"+phone+"/"+pass+"/"+countTaka+"\n";
				FileWriter fw1=new FileWriter("files/TravelerList.txt",true);
		      for (int i = 0; i < s.length(); i++)
			 {
                fw1.write(s.charAt(i));
	         }
            fw1.close(); 
			}
			catch(IOException ioe)
		    {
				ioe.printStackTrace();
			}
			fromStation="";
			toStation="";
			currentDate="";
		}
		else if(option==JOptionPane.NO_OPTION)
		{
			fromStation="";
			toStation="";
		}
		else if(option==JOptionPane.CANCEL_OPTION)
		{
			fromStation="";
			toStation="";
		}
		}
		else
		{
			JOptionPane.showMessageDialog(this,"You don't have sufficient Balance","Message",JOptionPane.INFORMATION_MESSAGE);
		}
	    }
		else if(toStation.equals(""))
		{
			JOptionPane.showMessageDialog(this,"You must have to select Ending Station","Error",JOptionPane.ERROR_MESSAGE);
		}
		else if(fromStation.equals("") || toStation.equals(""))
		{
			JOptionPane.showMessageDialog(this,"You must have to select Start and Ending Station","Error",JOptionPane.ERROR_MESSAGE);
		}
		else if(fromStation.equals(toStation))
		{
			JOptionPane.showMessageDialog(this,"You must have to select two Different Start and Ending Station","Warning",JOptionPane.WARNING_MESSAGE);
		}
		}
			
		if(e.getSource()==button11)
		{
			this.dispose();
			login.setVisible(true);
		}
	}
	
}

//HomePageFrame.java
package userGUI;

import entitylist.*;
import entity.TicketHistory;
import javax.swing.*;
import java.awt.*;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.table.*;
import java.io.*;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

public class HomePageFrame extends JFrame implements ActionListener
{
	private JLabel label1,label2,label3,label4,label5,label6;
	private JPanel panel;
	private JButton button1,button2,button3;
	Font font1=new Font("cambria",Font.BOLD+Font.ITALIC,20);
	Font font2=new Font("cambria",Font.BOLD,15);
	private JTable table;
	private DefaultTableModel model;
	
	private LogInFrame login;
	private HistoryList historyList;
	private TicketHistory history[];
	
	public HomePageFrame(LogInFrame login,HistoryList historyList)
	{
		super("Bangladesh Railway e-Ticket System");
		this.login=login;
		this.historyList=historyList;
		initializeForm();
		createTable();
		
		this.setVisible(true);
	}
	public void initializeForm()
	{
		this.setSize(900,600);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setLocationRelativeTo(null);
		this.setLayout(null);
		
		panel=new JPanel();
		panel.setBounds(0,0,900,600);
		panel.setLayout(null);
		panel.setOpaque(false);
		panel.setBackground(new Color(255,255,255));
		
		label1=new JLabel("Bangladesh Railway e-Ticket System");
		label1.setBounds(80,50,350,50);
		label1.setFont(font1);
		
		label2=new JLabel();
		label2.setBounds(30,120,150,50);
		label2.setFont(font1);
		
		Date date = new Date();
		
		DateFormat dateformat = new SimpleDateFormat("HH");
		String currentHour = dateformat.format(date);
		if(Integer.parseInt(currentHour)>=4 && Integer.parseInt(currentHour)<12)
		{
			label2.setText("Good Morning");
		}
		else if(Integer.parseInt(currentHour)>=12 && Integer.parseInt(currentHour)<=17)
		{
			label2.setText("Good Afternoon");
		}
		else if(Integer.parseInt(currentHour)>17 && Integer.parseInt(currentHour)<=23)
		{
			label2.setText("Good Evening");
		}
		else
		{
			label2.setText("Good Morning");
		}
		
		label3=new JLabel("Recent History");
		label3.setBounds(30,240,120,30);
		label3.setFont(font2);
		
		label4=new JLabel("Choice Your Service");
		label4.setBounds(500,210,150,30);
		label4.setFont(font2);
		
		label5=new JLabel("Balance "+login.balance+" TK ");
		label5.setBounds(650,120,200,50);
		label5.setFont(font1);
		
		label6=new JLabel(login.name);
		label6.setBounds(30,150,170,50);
		label6.setFont(font1);
		
		button1=new JButton(" Inter City ");
		button1.setBounds(500,250,150,150);
		button1.setFont(font1);
		button1.addActionListener(this);
		
		button2=new JButton(" Metro Rail ");
		button2.setBounds(660,250,150,150);
		button2.setFont(font1);
		button2.addActionListener(this);
		
		button3=new JButton(" Recharge ");
		button3.setBounds(700,450,120,40);
		button3.setFont(font2);
		button3.setBackground(new Color(137,201,237));
		button3.addActionListener(this);
		
		panel.add(label1);
		panel.add(label2);
		panel.add(label3);
		panel.add(label4);
        panel.add(label5);
		panel.add(label6);
		panel.add(button1);
		panel.add(button2);
		panel.add(button3);
		this.add(panel);
		
	}
	
	public void createTable()
	{
		
		model= new DefaultTableModel();
        table=new JTable(model);
       	JScrollPane scroll=new JScrollPane(table);
		scroll.setBounds(40,280,350,180);
		
		model.addColumn("Train");
		model.addColumn("From Station");
		model.addColumn("To Station");
		model.addColumn("Time");
		
		table.setFont(new Font("cambria",Font.BOLD,10));
		table.setBackground(new Color(174,247,255));
		table.setSelectionBackground(new Color(255,153,51));
		table.getTableHeader().setFont(font2);
		table.setRowHeight(25);
		table.setEnabled(false);
		
		history=historyList.getAllTicketHistory();
		for(int i=0; i<history.length; i++)
		{
			if(history[i]!=null)
			{
		   model.addRow(new Object[]{
			    history[i].getTrainName(),
				history[i].getFromStation(),
				history[i].getToStation(),
				history[i].getTime()
		    });
		
		}
		}
	 panel.add(scroll);
	}
	
	public void actionPerformed(ActionEvent e)
	{
		if(e.getSource()==button1)
		{
			IntercityBuyTicketFrame intercity=new IntercityBuyTicketFrame(this,login,historyList);
			this.setVisible(false);
			
		}
		if(e.getSource()==button2)
		{
			BuyTicketFrame btf=new BuyTicketFrame(this,login,historyList);
			this.setVisible(false);
		}
	}
	
}

//IntercityBuyTicketFrame.java
package userGUI;

import entitylist.*;
import files.*;
import entity.*;
import javax.swing.*;
import java.awt.*;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.io.*;
import java.util.Scanner;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

public class IntercityBuyTicketFrame extends JFrame implements ActionListener
{
	private JPanel panel;
	private JLabel label1,label2,label3,label4,label5,label6,label7,label8,label9,label10;
	private JButton button1,button2,button3,button4;
	private JComboBox cb1,cb2,cb3,cb4,cb5;
	private JRadioButton radiobtn1,radiobtn2,radiobtn3;
	private ButtonGroup grp;
	private JScrollPane scroll1,scroll2,scroll3;
	Font font1=new Font("cambria",Font.BOLD+Font.ITALIC,35);
	Font font2=new Font("cambria",Font.BOLD,25);
	Font font3=new Font("cambria",Font.BOLD,15);
	private LogInFrame login;
	private HomePageFrame hp;
	private HistoryList historyList;
	double ticketPrice ;
	private String trainName = "";
	private String fromStation = "";
	private String toStation = "";
	
	
	public IntercityBuyTicketFrame(HomePageFrame hp,LogInFrame login,HistoryList historyList)
	{
		super("Bangladesh Railway");
		this.login=login;
		this.hp=hp;
		this.historyList=historyList;
		initializeForm();
		
		this.setVisible(true);
	}
	
	public void initializeForm()
	{
		this.setSize(700,600);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setLocationRelativeTo(null);
		this.setLayout(null);
		
		panel=new JPanel();
		panel.setBounds(0,0,700,600);
		panel.setLayout(null);
		panel.setOpaque(false);
		panel.setBackground(new Color(255,255,255));
		

		label1=new JLabel("<");
		label1.setBounds(0,0,60,40);
		label1.setFont(new Font("Meiryo",Font.BOLD,35));
		
		button1=new JButton();
		button1.setBounds(10,60,60,40);
		button1.addActionListener(this);
		button1.setToolTipText("Back to Homepage");
		button1.add(label1);
		
		ImageIcon img=new ImageIcon("./userGUI/Resources/LOGO2.png");
		JLabel logo=new JLabel("",img,JLabel.CENTER);
		logo.setBounds(90,50,60,60);
		panel.add(logo);
		
		label2=new JLabel("InterCity Trains");
		label2.setBounds(150,45,350,60);
		label2.setFont(font1);
		label2.setForeground(new Color(41, 37, 94));
		
		button2=new JButton("Sign out");
		button2.setBounds(570,65,90,30);
		button2.setBackground(new Color(96,188,209));
		button2.setFont(font3);
		button2.addActionListener(this);
		
		label3=new JLabel("Buy Ticket");
		label3.setBounds(20,130,150,50);
		label3.setFont(font2);
		
		label4=new JLabel("From Station");
		label4.setBounds(40,200,240,30);
		label4.setFont(font3);
		
		cb1=new JComboBox();
		cb1.setBounds(40,235,240,30);
		cb1.setFont(font3);
		cb1.setEditable(true);
		StationHistory stationHistory [] = historyList.getAllStationHistory();
		
		for(int i=0; i<stationHistory.length; i++)
		{
		    if(stationHistory[i]!=null)
			{
				String st = stationHistory[i].getFromStation();
				cb1.addItem(st);
			}
			
		}
		cb1.setSelectedItem("");
		cb1.addActionListener(this);
		
		label5=new JLabel("To Station");
		label5.setBounds(320,200,240,30);
		label5.setFont(font3);
		
		cb2=new JComboBox();
		cb2.setBounds(320,235,240,30);
		cb2.setFont(font3);
		cb2.setEditable(true);
		
		/*for(int i=0; i<stationHistory.length; i++)
		{
		    if(stationHistory[i]!=null)
			{
				String st = stationHistory[i].getFromStation();
				cb2.addItem(st);
			}
			
		}*/
		cb2.setSelectedItem("");
		cb2.addActionListener(this);
		
		label6=new JLabel("Select Train");
		label6.setBounds(40,270,240,30);
		label6.setFont(font3);
		
		cb3=new JComboBox();
		cb3.setFont(font3);
		cb3.setEditable(true);
		cb3.addActionListener(this);
		
		scroll1=new JScrollPane(cb3);
		scroll1.setBounds(40,305,240,30);
		cb3.setPreferredSize(new Dimension(0,20));
		cb3.setMaximumRowCount(5);
		
		label7=new JLabel("Journey Date");
		label7.setBounds(320,270,240,30);
		label7.setFont(font3);
		
		cb4=new JComboBox();
		cb4.setFont(font3);
		cb4.setEditable(true);
		cb4.addActionListener(this);
		
		scroll2=new JScrollPane(cb4);
		scroll2.setBounds(320,305,240,30);
		cb4.setPreferredSize(new Dimension(0,20));
		cb4.setMaximumRowCount(5);
		
		label8=new JLabel("Choose Class");
		label8.setBounds(40,340,240,30);
		label8.setFont(font3);
		
		radiobtn1=new JRadioButton("Shovon");
		radiobtn1.setBounds(40,375,80,30);
		radiobtn1.addActionListener(this);
		
		radiobtn2=new JRadioButton("Snigdha");
		radiobtn2.setBounds(125,375,80,30);
		radiobtn2.addActionListener(this);
		
		radiobtn3=new JRadioButton("Berth");
		radiobtn3.setBounds(210,375,70,30);
		radiobtn3.addActionListener(this);
		
		grp=new ButtonGroup();
		grp.add(radiobtn1);
		grp.add(radiobtn2);
		grp.add(radiobtn3);
		
		label9=new JLabel("Choose Coach");
		label9.setBounds(320,340,240,30);
		label9.setFont(font3);
		
		cb5=new JComboBox();
		cb5.setFont(font3);
		cb5.setEditable(true);
		cb5.addActionListener(this);
		
		scroll3=new JScrollPane(cb5);
		scroll3.setBounds(320,375,240,30);
		cb5.setPreferredSize(new Dimension(0,20));
		cb5.setMaximumRowCount(5);
		
		/*button3=new JButton("Reset");
		button3.setBounds(450,500,80,30);
		button3.setBackground(new Color(96,188,209));
		button3.setFont(font3);
		button3.addActionListener(this);*/
		
		label10=new JLabel();
		label10.setBounds(40,490,400,40);
		label10.setForeground(new Color(41, 37, 94));
		label10.setFont(font2);
		//label10.setText("Tiket Price : "+1100+" TK ");
		
		
		button4=new JButton("Buy");
		button4.setBounds(560,500,80,30);
		button4.setBackground(new Color(96,188,209));
	    button4.setFont(font3);
		button4.addActionListener(this);
	
		
		panel.add(label2);
		panel.add(label3);
		panel.add(label4);
		panel.add(label5);
		panel.add(label6);
		panel.add(label7);
		panel.add(label8);
		panel.add(label9);
		panel.add(label10);
		panel.add(button1);
		panel.add(button2);
		//panel.add(button3);
		panel.add(button4);
		panel.add(cb1);
		panel.add(cb2);
		panel.add(scroll1);
		panel.add(scroll2);
		panel.add(scroll3);
		panel.add(radiobtn1);
		panel.add(radiobtn2);
		panel.add(radiobtn3);
		
		this.add(panel);
	}
	public void actionPerformed(ActionEvent e)
	{
		if(e.getSource()==button1)
		{
			this.dispose();
		
            HomePageFrame hpf=new HomePageFrame(login,historyList);
			
		}
		if(e.getSource()==button2)
		{
			this.dispose();
			login.setVisible(true);
		}
		if(e.getSource()==cb1)
		{
				
			boolean flag = false;
			 
			String [] stations = new String[1000000];
			TrainHistory trainhistory [] = historyList.getAllTrainHistory();
			cb2.removeAllItems();
			
			for(int i=0; i<trainhistory.length; i++)
			{
				if(trainhistory[i]!=null)
				{
					if(cb1.getSelectedItem()!=null && 
					cb1.getSelectedItem().equals(trainhistory[i].getFromStation()))
					{
						fromStation = cb1.getSelectedItem().toString();
						for(int w=0; w<stations.length; w++)
						{
							if(stations[w]!=null && stations[w].equals(trainhistory[i].getToStation()))
							{
								
							   flag = true;
								break;
							}
						}
						if(flag==false)
						{
						for(int j=0; j<stations.length; j++)
						{
						   if(stations[j]==null)
						   {
							   stations[j]=trainhistory[i].getToStation();
							   break;
						   }
							
						}
						}
					}
				}
				flag = false;
			}
	
			for(int i=0; i<stations.length; i++)
			{						
         		if(stations[i]!=null)
				{
					
					cb2.addItem(stations[i]);
					
				}
				toStation = cb2.getSelectedItem().toString();
		}
		}
		if(e.getSource()==cb2)
		{
			
			boolean flag = false;
			String [] trains = new String[1000000];
			TrainHistory trainhistory [] = historyList.getAllTrainHistory();
			cb3.removeAllItems();
			
			for(int i=0; i<trainhistory.length; i++)
			{
				if(trainhistory[i]!=null)
				{
					if(cb1.getSelectedItem()!=null && 
					cb2.getSelectedItem()!=null && 
					cb1.getSelectedItem().equals(trainhistory[i].getFromStation()) && 
					cb2.getSelectedItem().equals(trainhistory[i].getToStation()))
					{
						for(int w=0; w<trains.length; w++)
						{
							if(trains[w]!=null && trains[w].equals(trainhistory[i].getTrainName()))
							{
								
							   flag = true;
								break;
							}
						}
						if(flag==false)
						{
						for(int j=0; j<trains.length; j++)
						{
						   if(trains[j]==null)
						   {
							   trains[j]=trainhistory[i].getTrainName();
							   break;
						   }
							
						}
						}
					}
				}
				flag = false;
			}
	
			for(int i=0; i<trains.length; i++)
			{						
         		if(trains[i]!=null)
				{
					cb3.addItem(trains[i]);
				}
				if(cb2.getSelectedItem()!=null && cb3.getSelectedItem()!=null){
				toStation = cb2.getSelectedItem().toString();
				trainName = cb3.getSelectedItem().toString();
				}
		}
			
		}
	  
	if(e.getSource()==cb3)
		{
			boolean flag = false;
			
			String [] trainSchedule = new String[1000000];
			TrainHistory trainhistory [] = historyList.getAllTrainHistory();
			cb4.removeAllItems();
			
			for(int i=0; i<trainhistory.length; i++)
			{
				if(trainhistory[i]!=null)
				{
					if(cb1.getSelectedItem()!=null && 
					cb2.getSelectedItem()!=null && 
					cb3.getSelectedItem()!=null && 
					cb1.getSelectedItem().equals(trainhistory[i].getFromStation()) && 
					cb2.getSelectedItem().equals(trainhistory[i].getToStation()) && 
					cb3.getSelectedItem().equals(trainhistory[i].getTrainName()))
					{
						for(int w=0; w<trainSchedule.length; w++)
						{
							if(trainSchedule[w]!=null && 
							trainSchedule[w].equals(trainhistory[i].getTime()))
							{
								
							   flag = true;
								break;
							}
						}
						if(flag==false)
						{
						for(int j=0; j<trainSchedule.length; j++)
						{
						   if(trainSchedule[j]==null)
						   {
							   trainSchedule[j]=trainhistory[i].getTime();
							   break;
						   }
							
						}
						}
					}
				}
				flag = false;
			}
	
			for(int i=0; i<trainSchedule.length; i++)
			{						
         		if(trainSchedule[i]!=null)
				{
					cb4.addItem(trainSchedule[i]);
				}
		}
		
			String [] trainCoach = new String[1000000];
			TrainCoachHistory trainCoachHistory [] = historyList.getAllTrainCoachHistory();
			cb5.removeAllItems();
			
			for(int i=0; i<trainCoachHistory.length; i++)
			{
				if(trainCoachHistory[i]!=null)
				{
					if(cb1.getSelectedItem()!=null && 
					cb2.getSelectedItem()!=null && 
					cb3.getSelectedItem()!=null && 
					cb4.getSelectedItem()!=null && 
					cb3.getSelectedItem().equals(trainCoachHistory[i].getTrainName()))
					{
						for(int w=0; w<trainCoach.length; w++)
						{
							if(trainCoach[w]==null)
							{
								trainCoach[w]=trainCoachHistory[i].getTrainCoach();
								break;
							}
						}
					}
				}
				
			}
	
			for(int i=0; i<trainCoach.length; i++)
			{						
         		if(trainCoach[i]!=null)
				{
					cb5.addItem(trainCoach[i]);
				}
		}
		if(cb2.getSelectedItem()!=null && cb3.getSelectedItem()!=null){
				toStation = cb2.getSelectedItem().toString();
				trainName = cb3.getSelectedItem().toString();
				}
		}
		
		if(e.getSource()==cb4)
		{
			
		}
		
		if(e.getSource()==cb5)
		{
			
		}
		
		if(radiobtn1.isSelected())
		{
			if(cb1.getSelectedItem()!=null && 
			cb2.getSelectedItem()!=null && 
			cb3.getSelectedItem()!=null && 
			cb4.getSelectedItem()!=null && 
			cb5.getSelectedItem()!=null)
			{
				/*fromStation = cb1.getSelectedItem().toString();
				toStation = cb2.getSelectedItem().toString();
				trainName = cb3.getSelectedItem().toString();*/
				
			TrainHistory trainhistory [] = historyList.getAllTrainHistory();
			
			for(int i=0; i<trainhistory.length; i++)
			{
				if(trainhistory[i]!=null && 
				cb1.getSelectedItem().equals(trainhistory[i].getFromStation()) &&
				cb2.getSelectedItem().equals(trainhistory[i].getToStation()) &&
				cb3.getSelectedItem().equals(trainhistory[i].getTrainName()) && 
				cb4.getSelectedItem().equals(trainhistory[i].getTime()) &&
				radiobtn1.getText().equals(trainhistory[i].getclass()))
				{
					label10.setText("Tiket Price : "+trainhistory[i].getTicketPrice()+" TK ");
					ticketPrice = trainhistory[i].getTicketPrice();
					break;
				}
			}
		}
		
		}

		if(radiobtn2.isSelected())
		{
			if(cb1.getSelectedItem()!=null && 
			cb2.getSelectedItem()!=null && 
			cb3.getSelectedItem()!=null && 
			cb4.getSelectedItem()!=null && 
			cb5.getSelectedItem()!=null)
			{
				/*fromStation = cb1.getSelectedItem().toString();
				toStation = cb2.getSelectedItem().toString();
				trainName = cb3.getSelectedItem().toString();*/
				
			TrainHistory trainhistory [] = historyList.getAllTrainHistory();
			
			for(int i=0; i<trainhistory.length; i++)
			{
				if(trainhistory[i]!=null && 
				cb1.getSelectedItem().equals(trainhistory[i].getFromStation()) &&
				cb2.getSelectedItem().equals(trainhistory[i].getToStation()) &&
				cb3.getSelectedItem().equals(trainhistory[i].getTrainName()) && 
				cb4.getSelectedItem().equals(trainhistory[i].getTime()) &&
				radiobtn2.getText().equals(trainhistory[i].getclass()))
				{
					label10.setText("Tiket Price : "+trainhistory[i].getTicketPrice()+" TK ");
					ticketPrice = trainhistory[i].getTicketPrice();
					break;
				}
			}
		}
		
		}
		
		if(radiobtn3.isSelected())
		{
			if(cb1.getSelectedItem()!=null && 
			cb2.getSelectedItem()!=null && 
			cb3.getSelectedItem()!=null && 
			cb4.getSelectedItem()!=null && 
			cb5.getSelectedItem()!=null)
			{
				/*fromStation = cb1.getSelectedItem().toString();
				toStation = cb2.getSelectedItem().toString();
				trainName = cb3.getSelectedItem().toString();*/
				
			TrainHistory trainhistory [] = historyList.getAllTrainHistory();
			
			for(int i=0; i<trainhistory.length; i++)
			{
				if(trainhistory[i]!=null && 
				cb1.getSelectedItem().equals(trainhistory[i].getFromStation()) &&
				cb2.getSelectedItem().equals(trainhistory[i].getToStation()) &&
				cb3.getSelectedItem().equals(trainhistory[i].getTrainName()) && 
				cb4.getSelectedItem().equals(trainhistory[i].getTime()) &&
				radiobtn3.getText().equals(trainhistory[i].getclass()))
				{
					label10.setText("Tiket Price : "+trainhistory[i].getTicketPrice()+" TK ");
					ticketPrice = trainhistory[i].getTicketPrice();
					break;
				}
			}
		}
		
		}
		
		if(e.getSource()==button4)
		{
			if(cb1.getSelectedItem()!=null && 
			cb2.getSelectedItem()!=null && 
			cb3.getSelectedItem()!=null && 
			cb4.getSelectedItem()!=null && 
			cb5.getSelectedItem()!=null &&
			(radiobtn1.isSelected() || radiobtn2.isSelected() || radiobtn3.isSelected()))
			{
				if(Double.parseDouble(login.balance)>=ticketPrice)
				{
				int option=JOptionPane.showConfirmDialog(this,"Are you Sure to Buy a ticket from "+fromStation+" to "+toStation+"?");
				if(option==JOptionPane.YES_OPTION)
			{
				Date date = new Date();
                
				DateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
				String currentDate=dateformat.format(date);
				
			    TicketHistory th=new TicketHistory(trainName,fromStation,toStation,currentDate);
			    historyList.insertHistory(th);
			    FileIO.writeInFile(th.toString(),"files/ticketHistory.txt",true);
			
			try
			{
				String email="";
				String name="";
				String phone="";
				String pass="";
				String nid="";
				String balanceprice="";
				
				File oldfile=new File("files/TravelerList.txt");
				File newfile=new File("files/temp.txt");
				newfile.createNewFile();
				FileWriter fw=new FileWriter("files/temp.txt",true);
				
				
				FileReader fr=new FileReader(oldfile);
				BufferedReader bfr=new BufferedReader(fr);
				String singleLine;
				
				while((singleLine=bfr.readLine())!=null)
				{
					String sp[]=singleLine.split("/");
					if(sp[2].equals(login.emailId))
					{
						name=sp[0];
						nid=sp[1];
						email=sp[2];
						phone=sp[3];
						pass=sp[4];
						balanceprice=sp[5];
					}
					if(!sp[2].equals(login.emailId))
					{
						fw.write(singleLine+"\n");
					}
						
				}
				fr.close();
				fw.flush();
				fw.close();
				//pw.flush();
				//pw.close();
				oldfile.delete();
				File dump=new File("files/TravelerList.txt");
				newfile.renameTo(dump);
				double countTaka=Double.parseDouble(login.balance)-ticketPrice;
				String s=name+"/"+nid+"/"+email+"/"+phone+"/"+pass+"/"+countTaka+"\n";
				FileWriter fw1=new FileWriter("files/TravelerList.txt",true);
		      for (int i = 0; i < s.length(); i++)
			 {
                fw1.write(s.charAt(i));
	         }
            fw1.close(); 
			}
			catch(IOException ioe)
		    {
				ioe.printStackTrace();
			}
			/*fromStation="";
			toStation="";
			currentDate="";*/
		}
		else if(option==JOptionPane.NO_OPTION)
		{
			/*fromStation="";
			toStation="";*/
		}
		else if(option==JOptionPane.CANCEL_OPTION)
		{
			/*fromStation="";
			toStation="";*/
		}
		}
		else
		{
			JOptionPane.showMessageDialog(this,"You don't have sufficient Balance","Message",JOptionPane.INFORMATION_MESSAGE);
		}
	    }
		else if(fromStation.equals("") || toStation.equals(""))
		{
			JOptionPane.showMessageDialog(this,"You must have to Select Start and Ending Station","Error",JOptionPane.ERROR_MESSAGE);
		}
		else if(!radiobtn1.isSelected() || !radiobtn2.isSelected() || !radiobtn2.isSelected())
		{
			JOptionPane.showMessageDialog(this,"You must have to Choose a Class","Error",JOptionPane.ERROR_MESSAGE);
		}
				
		}
		
		}
}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	/*public void actionPerformed(ActionEvent e)
	{
		
		if(e.getSource()==cb1)
		{
			/*if(cb1.getSelectedItem().equals(""))
			{
				
			}
			else if(!cb1.getSelectedItem().equals("") && !cb1.getSelectedItem().equals(select))
			{
				select =cb1.getSelectedItem().toString();*/
			/*boolean flag = false;
			System.out.println(10);
			 a++;
			String [] stations = new String[1000000];
			TrainHistory trainhistory [] = historyList.getAllTrainHistory();
			//cb2.removeAllItems();
			
			for(int i=0; i<trainhistory.length; i++)
			{
				if(trainhistory[i]!=null)
				{
					if(cb1.getSelectedItem()!=null && cb1.getSelectedItem().equals(trainhistory[i].getFromStation()))
					{
						for(int w=0; w<stations.length; w++)
						{
							if(stations[w]!=null && stations[w].equals(trainhistory[i].getToStation()))
							{
								
							   flag = true;
								break;
							}
						}
						if(flag==false)
						{
						for(int j=0; j<stations.length; j++)
						{
						   if(stations[j]==null)
						   {
							   stations[j]=trainhistory[i].getToStation();
							   for(int p=0; p<removestr.length; p++)
							   {
								   if(removestr[p]==null)
								   {
									   removestr[p]=trainhistory[i].getToStation();
									 // System.out.println(removestr[p]);
									   break;
								   }
							   }
							   break;
						   }
							
						}
						}
					}
				}
				flag = false;
			}
	
			for(int i=0; i<stations.length; i++)
			{						
         		if(stations[i]!=null)
				{
					//String stp = stations[i];
					cb2.addItem(stations[i]);
					
					 
				}
		}
		for(int i=0; i<stations.length; i++)
			{						
         		if(stations[i]!=null)
				{
					for(int j=0; j<removestr.length; j++)
					{
						if(removestr[j]!=null && stations[i].equals(removestr[j]))
						{
							//System.out.println(stations[i]);
							removestr[j]=null;
							break;
						}
					}
					
					 
				}
		} 
		/*for(int j=0; j<removestr.length; j++)
			{						
         		if(removestr[j]!=null)
				{
					for(int i=0; i<stations.length; i++)
					{
						if(stations[i]!=null && removestr[j].equals(stations[i]))
						{
							//System.out.println(stations[i]);
							removestr[j]=null;
							break;
						}
					}
					
					 
				}
		}*/
		/*if(a>1){
		for(int i=0; i<removestr.length; i++)
			{						
         		if(removestr[i]!=null)
				{
					//String stp = stations[i];
					System.out.println(removestr[i]);
					cb2.removeItem(removestr[i].toString());
					
					 
				}
			}
		}
		if(!flag1){
		StationHistory stationHistory [] = historyList.getAllStationHistory();
		flag1 = true;
		for(int i=0; i<stationHistory.length; i++)
		{
		    if(stationHistory[i]!=null)
			{
				String st = stationHistory[i].getFromStation();
				cb2.removeItem(st);
			}
			
		}
		}
		
		
			/*else if(cb1.getSelectedItem().equals(select))
			{
			}*/
	//}
		/*if(e.getSource()==cb2)
		{
			
			boolean flag = false;
			String [] station = new String[1000000];
			TrainHistory trainhistorys [] = historyList.getAllTrainHistory();
			
			//cb1.removeAllItems();
			for(int i=0; i<trainhistorys.length; i++)
			{
				if(trainhistorys[i]!=null)
				{
					if(cb2.getSelectedItem()!=null && cb2.getSelectedItem().equals(trainhistorys[i].getToStation()))
					{
						for(int w=0; w<station.length; w++)
						{
							if(station[w]!=null && station[w].equals(trainhistorys[i].getFromStation()))
							{
								
							   flag = true;
								break;
							}
						}
						if(flag==false)
						{
						for(int j=0; j<station.length; j++)
						{
						   if(station[j]==null)
						   {
							   station[j]=trainhistorys[i].getFromStation();
							 
							   break;
						   }
							
						}
						}
					}
				}
				flag = false;
			}
			
			for(int i=0; i<station.length; i++)
			{					
         		if(station[i]!=null)
				{
					//String stp = stations[i];
					cb1.addItem(station[i]);
					
					 
				}
		}
		if(!flag2){
		StationHistory stationHistory [] = historyList.getAllStationHistory();
		flag2 = true;
		for(int i=0; i<stationHistory.length; i++)
		{
		    if(stationHistory[i]!=null)
			{
				String st = stationHistory[i].getFromStation();
				cb1.removeItem(st);
			}
			
		}
		}
		
		
	  }
	
		if(e.getSource()==cb3)
		{
			
		}
		
	}*/
  
  //LogInFrame.java
  package userGUI;

import AdminGUI.AdminHomePageFrame;
import files.FileIO;
import entitylist.*;
import javax.swing.*;
import java.awt.*;
import java.awt.Cursor;
import java.awt.event.ActionListener;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.imageio.*;
import java.io.*;
import java.util.Scanner;



public class LogInFrame extends JFrame implements ActionListener
{
	private JPanel panel1,panel2;
	private JButton button1,button2,button3;
	private JTextField text;
	private JPasswordField password;
	private JLabel label1,label2,label3;
	Font font1=new Font("cambria",Font.BOLD+Font.ITALIC,25);
	Font font2=new Font("cambria",Font.BOLD,15);
    private FileReader fr;
	private BufferedReader bfr;
    public static String emailId="";
	public static String name="";
	public static String phone="";
	public static String balance="";
	private String pass="";
	private Cursor cursor=new Cursor(Cursor.HAND_CURSOR);
	
	//private static String userphone="",pass="";
	
	public LogInFrame(int a)
	{
		
	}
	public LogInFrame()
	{
		super(" Bangladesh Railway e-Ticket System ");
		intializeForm();
		
		 this.setVisible(true);
	}
	
	public void intializeForm()
	{
		this.setSize(800,600);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setLocationRelativeTo(null);
		this.setLayout(null);
		
		/*ImageIcon imag=new ImageIcon("");
		Image img=imag.getImage();
		this.setIconImage(img);*/
		
		
		panel1=new JPanel();
		panel1.setBounds(0,0,800,600);
	    panel1.setLayout(null);
		panel1.setOpaque(false);
		panel1.setBackground(new Color(255,255,255));
		
		panel2=new JPanel();
		panel2.setBounds(40,250,200,250);
	    panel2.setLayout(null);
		panel2.setBackground(new Color(170,179,176));
		
		ImageIcon img=new ImageIcon("./userGUI/Resources/LOGO2.png");
		JLabel logo=new JLabel("",img,JLabel.CENTER);
		logo.setBounds(20,50,60,60);
		
		label1=new JLabel(" Bangladesh Railway e-Ticket System ");
		label1.setBounds(80,30,450,100);
		label1.setFont(font1);
		
		label2=new JLabel("E-mail");
		label2.setBounds(10,10,60,30);
		label2.setFont(font2);
		
		label3=new JLabel("Password");
		label3.setBounds(10,85,100,30);
		label3.setFont(font2);
		
		text=new JTextField();
		text.setBounds(10,45,150,30);
		text.setFont(font2);
		text.addKeyListener(new KeyAdapter(){
			public void keyPressed(KeyEvent ke)
			{
				if(ke.getKeyCode()==KeyEvent.VK_ENTER)
				{
					password.requestFocus();
					
				}
				
			}
			
		});
		
		password=new JPasswordField();
		password.setBounds(10,120,150,30);
		password.setEchoChar('*');
		password.setFont(font2);
		
		button1=new JButton("Sign In");
		button1.setBounds(10,160,90,30);
		button1.setFont(font2);
		button1.setBackground(new Color(137,201,237));
		button1.addActionListener(this);
		button1.setCursor(cursor);
		
		button2=new JButton("Sign Up");
		button2.setBounds(105,160,90,30);
		button2.setFont(font2);
		button2.setBackground(new Color(137,201,237));
		button2.addActionListener(this);
		button2.setCursor(cursor);
		
		button3=new JButton("Forget Password?");
		button3.setBounds(20,200,160,30);
		button3.setFont(font2);
		button3.setBackground(new Color(137,201,237));	
		button3.addActionListener(this);
		button3.setCursor(cursor);
		
		ImageIcon image=new ImageIcon("./userGUI/Resources/LogIn.png");
		JLabel background=new JLabel("",image,JLabel.CENTER);
		background.setBounds(260,200,540,400);
		
		
		panel2.add(label2);
		panel2.add(label3);
		panel2.add(text);
		panel2.add(password);
		panel2.add(button1);
		panel2.add(button2);
		panel2.add(button3);
		panel1.add(panel2);
		panel1.add(label1);
		panel1.add(logo);
		panel1.add(background);
		this.add(panel1);
		
	}
	
	public void actionPerformed(ActionEvent e)
	{

		if(button1==e.getSource())
		{
			boolean flag=false;
			try{
			Scanner sc=new Scanner(new File("files/TravelerList.txt"));
			while(sc.hasNextLine())
			{
				String sp[]=sc.nextLine().split("/");
				if(text.getText().equals(sp[2]) && (new String(password.getPassword())).equals(sp[4]))
				{
					if(!sp[2].equals("admin@gmail.com") && !sp[4].equals("admin12345"))
					{
					name=sp[0];
					emailId=sp[2];
					phone=sp[3];
				    pass=sp[4];
					balance=sp[5];
					HistoryList historyList = new HistoryList(100000000);
                    FileIO.readFromFile("files/ticketHistory.txt",historyList);	
					FileIO.readFromTrainHistoryFile("files/TrainHistory.txt",historyList);
					FileIO.readFromStationHistoryFile("files/StationHistory.txt",historyList);
					FileIO.readFromTrainCoachHistoryFile("files/TrainCoachHistory.txt",historyList);
			        HomePageFrame hpf=new HomePageFrame(this,historyList);
			        this.setVisible(false);
			        flag=true;
					break;
					}
					else
					{
						
						AdminHomePageFrame adminhome = new AdminHomePageFrame(this);
						this.setVisible(false);
						flag=true;
						break;
					}
				}
			}
			sc.close();
			if(!flag)
			{
			  JOptionPane.showMessageDialog(this,"Information Not Match","Warning",JOptionPane.WARNING_MESSAGE);
			}
			
			}
			catch(IOException ioe)
			{
				System.out.println("File Can not found");
			}
			
		}
		if(button2==e.getSource())
		{
			SignUpFrame suf=new SignUpFrame(this);
			this.setVisible(false);
		}
		if(button3==e.getSource())
		{
			
		}
	}
	
		
}

//SignIn.java
package userGUI;


//SignUpFrame.java
package userGUI;

import entitylist.*;
import entity.*;
import files.*;
import javax.swing.*;
import java.awt.*;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.io.*;

public class SignUpFrame extends JFrame implements ActionListener
{
	private JPanel panel;
	private JLabel label1,label2,label3,
	label4,label5,label6,label7,
	label8,label9,label10,label11,
	label12,label13,label14,label15;
	private JButton button1,button2,button3;
	private JTextField text1,text2,
	text3,text4,text5,text6,text7,
	text8,text9,text10,text11,
	text12,text13;
	private JComboBox cb;
	private JCheckBox checkbox;
	private JScrollPane scroll;
	Font font1=new Font("cambria",Font.BOLD+Font.ITALIC,25);
	Font font2=new Font("cambria",Font.BOLD,15);
	Font font3=new Font("cambria",Font.BOLD,10);
	private String [] question = {"What is your favorite color?","What is your favorite game?","What is your favorite food?","What is your favorite subject?","What is your favorite writer?","What is your favorite singer?"};
	private LogInFrame login;
	
	public SignUpFrame(LogInFrame login)
	{
		super("Bangladesh Railway");
		this.login=login;
		initializeForm();
		
		this.setVisible(true);
	}
	public void initializeForm()
	{
		this.setSize(900,650);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setLocationRelativeTo(null);
		this.setLayout(null);
		
		panel=new JPanel();
		panel.setBounds(0,0,900,650);
		panel.setLayout(null);
		panel.setOpaque(false);
		panel.setBackground(new Color(255,255,255));
		
		ImageIcon img=new ImageIcon("./userGUI/Resources/Logo333.png");
		JLabel logo=new JLabel("",img,JLabel.CENTER);
		logo.setBounds(340,45,50,50);
		
		label1=new JLabel("Sign Up");
		label1.setBounds(400,40,150,50);
		label1.setFont(font1);
		label1.setForeground(new Color(41,196,96));
		label1.setBackground(new Color(41,196,96));
		
		
		label2=new JLabel("Already have an account?");
		label2.setBounds(620,50,120,50);
		label2.setFont(font3);
		label2.setBackground(new Color(41,196,96));
		
		button1=new JButton("Sign In");
		button1.setBounds(760,60,90,30);
		button1.setFont(font2);
		button1.setBackground(new Color(41,196,96));
		button1.addActionListener(this);
		
		label3=new JLabel("Name");
		label3.setBounds(340,130,80,30);
		label3.setFont(font2);
		
		text1=new JTextField();
		text1.setBounds(340,165,250,30);
		text1.setFont(font2);
		
		label4=new JLabel("NID");
		label4.setBounds(340,200,80,30);
		label4.setFont(font2);
		
		text2=new JTextField();
		text2.setBounds(340,235,250,30);
		text2.setFont(font2);
		
		label5=new JLabel("Password");
		label5.setBounds(340,270,100,30);
		label5.setFont(font2);
		
		text3=new JTextField();
		text3.setBounds(340,305,250,30);
		text3.setFont(font2);
		
		label6=new JLabel("Security Question");
		label6.setBounds(340,340,150,30);
		label6.setFont(font2);
		
		try{
		 cb=new JComboBox(question);
		cb.setFont(font2);
		cb.setBackground(new Color(255,255,255));
		
		scroll=new JScrollPane(cb);
		scroll.setBounds(340,375,250,30);
		//scroll.setPreferredSize(new Dimension(200,100));
		cb.setPreferredSize(new Dimension(0,20));
		cb.setMaximumRowCount(4);
		panel.add(scroll);
		}
		catch(Exception ex)
		{
			
		}
		
		label7=new JLabel("Captcha");
		label7.setBounds(340,410,80,30);
		label7.setFont(font2);
		
		label8=new JLabel(" 7 + 9 ");
		label8.setBounds(420,450,100,30);
		label8.setFont(font2);
		
		label9=new JLabel("E-mail");
		label9.setBounds(610,130,100,30);
		label9.setFont(font2);
		
		text5=new JTextField();
		text5.setBounds(610,165,250,30);
		text5.setFont(font2);
		
		label10=new JLabel("Phone");
		label10.setBounds(610,200,80,30);
		label10.setFont(font2);
		
		text6=new JTextField();
		text6.setBounds(610,235,250,30);
		text6.setFont(font2);
		
		label11=new JLabel("Confirm Password");
		label11.setBounds(610,270,150,30);
		label11.setFont(font2);
		
		text7=new JTextField();
		text7.setBounds(610,305,250,30);
		text7.setFont(font2);
		
		label12=new JLabel("Your Answer");
		label12.setBounds(610,340,100,30);
		label12.setFont(font2);
		
		text8=new JTextField();
		text8.setBounds(610,375,250,30);
		text8.setFont(font2);
		
		label13=new JLabel("Enter the result here");
		label13.setBounds(610,410,200,30);
		label13.setFont(font2);
		
		text9=new JTextField();
		text9.setBounds(610,445,250,30);
		text9.setFont(font2);
		
		checkbox=new JCheckBox();
		checkbox.setBounds(340,511,17,15);
		checkbox.addActionListener(this);
		
		label14=new JLabel("I accept all the Terms and Condition and Privacy Policy");
		label14.setBounds(365,503,400,30);
		label14.setFont(font3);
		
		button3=new JButton("Sign Up");
		button3.setBounds(340,550,100,30);
		button3.setFont(font2);
		button3.setBackground(new Color(41,196,96));
		button3.addActionListener(this);
		
		label15=new JLabel("Visit Account Settings to enable Password recovery with OTP");
		label15.setBounds(580,550,400,30);
		label15.setFont(font3);
		label15.setForeground(new Color(41,196,96));
		
		ImageIcon image=new ImageIcon("./userGUI/Resources/SignUpFrame.png");
		JLabel background=new JLabel("",image,JLabel.CENTER);
		background.setBounds(0,0,300,650);
		
		panel.add(label1);
		panel.add(label2);
		panel.add(label3);
		panel.add(label4);
		panel.add(label5);
		panel.add(label6);
		panel.add(label7);
		panel.add(label8);
		panel.add(label9);
		panel.add(label10);
		panel.add(label11);
		panel.add(label12);
		panel.add(label13);
		panel.add(label14);
		panel.add(label15);
		panel.add(button1);
		panel.add(checkbox);
		panel.add(button3);
		panel.add(text1);
		panel.add(text2);
		panel.add(text3);
		//panel.add(cb);
		panel.add(text5);
		panel.add(text6);
		panel.add(text7);
		panel.add(text8);
		panel.add(text9);
		panel.add(logo);
		panel.add(background);
		this.add(panel);
		
		
	}
	public void actionPerformed(ActionEvent e)
	{
		if(e.getSource()==button1)
		{
			this.dispose();
			login.setVisible(true);
		}
		if(e.getSource()==button3)
		{
			if(!text1.getText().equals("") && !text2.getText().equals("") &&
			!text5.getText().equals("") && !text6.getText().equals("") &&  
			!text3.getText().equals("") && !text7.getText().equals("") && 
			!text8.getText().equals("") && !text9.getText().equals("") && checkbox.isSelected() &&
			text7.getText().equals(text3.getText()))
			{
				TravelerHistory th = new TravelerHistory(text1.getText(),text2.getText(),
				text5.getText(),text6.getText(),text3.getText(),5000);
				try {
				String st =text1.getText()+"/"+text2.getText()+"/"+
				text5.getText()+"/"+text6.getText()+"/"+text3.getText()+"/"+5000+"\n";
				HistoryList historyList = new HistoryList(100000000);
				historyList.insertHistory(th);
				FileWriter fw = new FileWriter("files/TravelerList.txt",true);
				fw.write(st);
				fw.close();
				}
				catch(Exception ex)
				{
					
				}
				JOptionPane.showMessageDialog(this,"Sing Up Successfull");
				this.dispose();
				login.setVisible(true);
			}
		}
		
	}
	
}

//TicketReceiptFrame.java
package userGUI;

public class TicketReceiptFrame
{
	
	
	
}

